2025-01-01 21:11:58,355 - INFO - Initializing application
2025-01-01 21:11:58,361 - DEBUG - Loading design configurations from ss11.csv
2025-01-01 21:11:58,361 - DEBUG - Processing row: {'font': 'Poppins-Medium', 'bgco': 'F3F4F6', 'textco': '2C3E50', 'imagesize': '(1080', 'fontsize': '1080)', 'accent': '48', 'shape1': '#E74C3C', 'shape2': 'square', 'shape_color': 'circle', 'grid_pos1': '#7D3C98', 'grid_pos2': 'center', None: ['corners']}
2025-01-01 21:11:58,361 - DEBUG - Configuration added: {'font': 'Poppins-Medium', 'bgco': '#F3F4F6', 'textco': '#2C3E50', 'imagesize': (1080, 1080), 'fontsize': 48, 'accent': '#48'}
2025-01-01 21:11:58,361 - DEBUG - Processing row: {'font': 'Poppins-Medium', 'bgco': 'F5F6FA', 'textco': '34495E', 'imagesize': '(1080', 'fontsize': '1080)', 'accent': '48', 'shape1': '#2980B9', 'shape2': 'square', 'shape_color': 'circle', 'grid_pos1': '#16A085', 'grid_pos2': '3', None: ['7']}
2025-01-01 21:11:58,361 - DEBUG - Configuration added: {'font': 'Poppins-Medium', 'bgco': '#F5F6FA', 'textco': '#34495E', 'imagesize': (1080, 1080), 'fontsize': 48, 'accent': '#48'}
2025-01-01 21:11:58,361 - DEBUG - Processing row: {'font': 'Poppins-Medium', 'bgco': 'FDF6F0', 'textco': '8E44AD', 'imagesize': '(1080', 'fontsize': '1080)', 'accent': '48', 'shape1': '#F39C12', 'shape2': 'square', 'shape_color': 'square', 'grid_pos1': '#D35400', 'grid_pos2': '3', None: ['7']}
2025-01-01 21:11:58,361 - DEBUG - Configuration added: {'font': 'Poppins-Medium', 'bgco': '#FDF6F0', 'textco': '#8E44AD', 'imagesize': (1080, 1080), 'fontsize': 48, 'accent': '#48'}
2025-01-01 21:11:58,361 - DEBUG - Processing row: {'font': 'Poppins-Medium', 'bgco': 'F0E5D8', 'textco': '4B3C3C', 'imagesize': '(1080', 'fontsize': '1080)', 'accent': '48', 'shape1': '#C0392B', 'shape2': 'square', 'shape_color': 'circle', 'grid_pos1': '#7D3C98', 'grid_pos2': '3', None: ['7']}
2025-01-01 21:11:58,361 - DEBUG - Configuration added: {'font': 'Poppins-Medium', 'bgco': '#F0E5D8', 'textco': '#4B3C3C', 'imagesize': (1080, 1080), 'fontsize': 48, 'accent': '#48'}
2025-01-01 21:11:58,361 - DEBUG - Processing row: {'font': 'Poppins-Medium', 'bgco': 'E8D8D0', 'textco': '3C2B2B', 'imagesize': '(1080', 'fontsize': '1080)', 'accent': '48', 'shape1': '#8E44AD', 'shape2': 'circle', 'shape_color': 'circle', 'grid_pos1': '#2980B9', 'grid_pos2': '3', None: ['7']}
2025-01-01 21:11:58,361 - DEBUG - Configuration added: {'font': 'Poppins-Medium', 'bgco': '#E8D8D0', 'textco': '#3C2B2B', 'imagesize': (1080, 1080), 'fontsize': 48, 'accent': '#48'}
2025-01-01 21:11:58,361 - DEBUG - Processing row: {'font': 'Poppins-Medium', 'bgco': 'F5F0E1', 'textco': '5E4D3E', 'imagesize': '(1080', 'fontsize': '1080)', 'accent': '48', 'shape1': '#27AE60', 'shape2': 'circle', 'shape_color': 'square', 'grid_pos1': '#16A085', 'grid_pos2': '3', None: ['7']}
2025-01-01 21:11:58,361 - DEBUG - Configuration added: {'font': 'Poppins-Medium', 'bgco': '#F5F0E1', 'textco': '#5E4D3E', 'imagesize': (1080, 1080), 'fontsize': 48, 'accent': '#48'}
2025-01-01 21:11:58,361 - DEBUG - Total configurations loaded: 6
2025-01-01 21:11:58,363 - DEBUG - Using selector: KqueueSelector
2025-01-01 21:11:58,418 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-01-01 21:11:58,421 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-01-01 21:11:58,422 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-01-01 21:11:58,422 - DEBUG - send_request_headers.complete
2025-01-01 21:11:58,422 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-01-01 21:11:58,422 - DEBUG - send_request_body.complete
2025-01-01 21:11:58,422 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-01-01 21:11:58,456 - INFO - Initializing TestimonialGenerator
2025-01-01 21:11:58,456 - INFO - Font downloaded successfully
2025-01-01 21:11:58,456 - INFO - Validating CSV structure
2025-01-01 21:11:58,456 - INFO - CSV columns found: ['Poppins-Medium', 'F3F4F6', '2C3E50', '(1080', '1080)', '48', '#E74C3C', 'square', 'circle', '#7D3C98', 'center', 'corners']
2025-01-01 21:11:58,456 - ERROR - Missing required columns: {'textco', 'accent', 'bgco'}
2025-01-01 21:11:58,456 - WARNING - CSV validation failed, using default color schemes
2025-01-01 21:11:58,456 - INFO - TestimonialGenerator initialized successfully
2025-01-01 21:11:58,461 - DEBUG - Using selector: KqueueSelector
2025-01-01 21:11:58,693 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11084dbd0>
2025-01-01 21:11:58,693 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x110734200> server_hostname='api.gradio.app' timeout=3
2025-01-01 21:11:58,706 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:41:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-01-01 21:11:58,707 - INFO - HTTP Request: GET https://api.gradio.app/gradio-messaging/en "HTTP/1.1 200 OK"
2025-01-01 21:11:58,708 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-01-01 21:11:58,708 - DEBUG - receive_response_body.complete
2025-01-01 21:11:58,708 - DEBUG - response_closed.started
2025-01-01 21:11:58,708 - DEBUG - response_closed.complete
2025-01-01 21:11:58,708 - DEBUG - close.started
2025-01-01 21:11:58,709 - DEBUG - close.complete
2025-01-01 21:11:58,763 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-01-01 21:11:59,312 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1109a5550>
2025-01-01 21:11:59,313 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-01-01 21:11:59,314 - DEBUG - send_request_headers.complete
2025-01-01 21:11:59,314 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-01-01 21:11:59,314 - DEBUG - send_request_body.complete
2025-01-01 21:11:59,314 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-01-01 21:11:59,621 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:41:59 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-01-01 21:11:59,621 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-01-01 21:11:59,621 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-01-01 21:11:59,622 - DEBUG - receive_response_body.complete
2025-01-01 21:11:59,622 - DEBUG - response_closed.started
2025-01-01 21:11:59,622 - DEBUG - response_closed.complete
2025-01-01 21:11:59,622 - DEBUG - close.started
2025-01-01 21:11:59,622 - DEBUG - close.complete
2025-01-01 21:12:02,936 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:12:02,987 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:12:02,987 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-01-01 21:12:02,995 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x110a18550>
2025-01-01 21:12:02,995 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x110734050> server_hostname='api.groq.com' timeout=5.0
2025-01-01 21:12:03,008 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x110a35b10>
2025-01-01 21:12:03,008 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:12:03,008 - DEBUG - send_request_headers.complete
2025-01-01 21:12:03,008 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:12:03,009 - DEBUG - send_request_body.complete
2025-01-01 21:12:03,009 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:12:03,614 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:42:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39df4dc6e0337-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4535'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'5.58s'), (b'x-request-id', b'req_01jgh8fxebe8csxtesfny911s1'), (b'Set-Cookie', b'__cf_bm=aBPltuz2QCOk8KVUe7TuXGDLQPvqo0j8wkVLmvAdZ3U-1735746123-1.0.1.1-3HPYkAw95SDct.q4zqE_4oale_qBTVIbUBTjTtDKpRpVbxkXFEMXC4XAwCz0KQ00hbU8wcFzWOdnE0fcupDV6A; path=/; expires=Wed, 01-Jan-25 16:12:03 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:12:03,616 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:12:03,616 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:12:03,617 - DEBUG - receive_response_body.complete
2025-01-01 21:12:03,617 - DEBUG - response_closed.started
2025-01-01 21:12:03,618 - DEBUG - response_closed.complete
2025-01-01 21:12:03,618 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:42:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb39df4dc6e0337-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4535', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '5.58s', 'x-request-id': 'req_01jgh8fxebe8csxtesfny911s1', 'set-cookie': '__cf_bm=aBPltuz2QCOk8KVUe7TuXGDLQPvqo0j8wkVLmvAdZ3U-1735746123-1.0.1.1-3HPYkAw95SDct.q4zqE_4oale_qBTVIbUBTjTtDKpRpVbxkXFEMXC4XAwCz0KQ00hbU8wcFzWOdnE0fcupDV6A; path=/; expires=Wed, 01-Jan-25 16:12:03 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:12:03,624 - INFO - Generated background color: #F2F2F2
2025-01-01 21:12:03,625 - INFO - Generated AI color theme: {'bgco': '#F2F2F2', 'textco': '#34495E', 'accent1': '#E74C3C', 'accent2': '#2980B9', 'shape1': '#7D3C98', 'shape2': '#16A085'}
2025-01-01 21:12:03,626 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:12:03,626 - INFO - Circle drawn successfully
2025-01-01 21:12:03,626 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:12:03,626 - INFO - Square drawn successfully
2025-01-01 21:12:03,627 - DEBUG - Using text color: #34495E
2025-01-01 21:12:03,628 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:12:03,628 - INFO - Circle drawn successfully
2025-01-01 21:12:03,628 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:12:03,629 - INFO - Square drawn successfully
2025-01-01 21:12:03,629 - DEBUG - Using text color: #34495E
2025-01-01 21:12:05,782 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:12:05,783 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:12:05,784 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:12:05,784 - DEBUG - send_request_headers.complete
2025-01-01 21:12:05,784 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:12:05,785 - DEBUG - send_request_body.complete
2025-01-01 21:12:05,785 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:12:06,438 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:42:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39e063e4a0337-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'4193'), (b'x-ratelimit-reset-requests', b'9.119s'), (b'x-ratelimit-reset-tokens', b'9.681s'), (b'x-request-id', b'req_01jgh8g08he8brv9r680fbw6em'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:12:06,439 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:12:06,440 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:12:06,441 - DEBUG - receive_response_body.complete
2025-01-01 21:12:06,441 - DEBUG - response_closed.started
2025-01-01 21:12:06,441 - DEBUG - response_closed.complete
2025-01-01 21:12:06,441 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:42:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb39e063e4a0337-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14398', 'x-ratelimit-remaining-tokens': '4193', 'x-ratelimit-reset-requests': '9.119s', 'x-ratelimit-reset-tokens': '9.681s', 'x-request-id': 'req_01jgh8g08he8brv9r680fbw6em', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:12:06,442 - INFO - Generated background color: #F2F2F5
2025-01-01 21:12:06,442 - INFO - Generated AI color theme: {'bgco': '#F2F2F5', 'textco': '#2C3E50', 'accent1': '#E74C3C', 'accent2': '#2980B9', 'shape1': '#7D3C98', 'shape2': '#16A085'}
2025-01-01 21:12:06,443 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:12:06,443 - INFO - Square drawn successfully
2025-01-01 21:12:06,443 - DEBUG - Using text color: #2C3E50
2025-01-01 21:12:06,445 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:12:06,445 - INFO - Square drawn successfully
2025-01-01 21:12:06,445 - DEBUG - Using text color: #2C3E50
2025-01-01 21:12:07,032 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:12:07,033 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:12:07,034 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:12:07,034 - DEBUG - send_request_headers.complete
2025-01-01 21:12:07,034 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:12:07,035 - DEBUG - send_request_body.complete
2025-01-01 21:12:07,035 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:12:07,642 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:42:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39e0dfb240337-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14397'), (b'x-ratelimit-remaining-tokens', b'3725'), (b'x-ratelimit-reset-requests', b'16.818999999s'), (b'x-ratelimit-reset-tokens', b'15.291999999s'), (b'x-request-id', b'req_01jgh8g1dafwvvqxmaemt3pnd4'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:12:07,643 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:12:07,644 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:12:07,644 - DEBUG - receive_response_body.complete
2025-01-01 21:12:07,644 - DEBUG - response_closed.started
2025-01-01 21:12:07,644 - DEBUG - response_closed.complete
2025-01-01 21:12:07,645 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:42:07 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb39e0dfb240337-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14397', 'x-ratelimit-remaining-tokens': '3725', 'x-ratelimit-reset-requests': '16.818999999s', 'x-ratelimit-reset-tokens': '15.291999999s', 'x-request-id': 'req_01jgh8g1dafwvvqxmaemt3pnd4', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:12:07,645 - INFO - Generated background color: #F3F6F9
2025-01-01 21:12:07,646 - INFO - Generated AI color theme: {'bgco': '#F3F6F9', 'textco': '#34495E', 'accent1': '#E74C3C', 'accent2': '#2980B9', 'shape1': '#7D3C98', 'shape2': '#16A085'}
2025-01-01 21:12:07,646 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:12:07,646 - INFO - Square drawn successfully
2025-01-01 21:12:07,647 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:12:07,647 - INFO - Circle drawn successfully
2025-01-01 21:12:07,648 - DEBUG - Using text color: #34495E
2025-01-01 21:12:07,649 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:12:07,649 - INFO - Square drawn successfully
2025-01-01 21:12:07,649 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:12:07,649 - INFO - Circle drawn successfully
2025-01-01 21:12:07,650 - DEBUG - Using text color: #34495E
2025-01-01 21:12:08,156 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:12:08,156 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:12:08,156 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:12:08,156 - DEBUG - send_request_headers.complete
2025-01-01 21:12:08,156 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:12:08,156 - DEBUG - send_request_body.complete
2025-01-01 21:12:08,156 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:12:08,725 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:42:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39e150f280337-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14396'), (b'x-ratelimit-remaining-tokens', b'3236'), (b'x-ratelimit-reset-requests', b'22.913999999s'), (b'x-ratelimit-reset-tokens', b'21.163999999s'), (b'x-request-id', b'req_01jgh8g2f9fj4bh314bradfx3v'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:12:08,725 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:12:08,726 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:12:08,726 - DEBUG - receive_response_body.complete
2025-01-01 21:12:08,726 - DEBUG - response_closed.started
2025-01-01 21:12:08,726 - DEBUG - response_closed.complete
2025-01-01 21:12:08,726 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:42:08 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb39e150f280337-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14396', 'x-ratelimit-remaining-tokens': '3236', 'x-ratelimit-reset-requests': '22.913999999s', 'x-ratelimit-reset-tokens': '21.163999999s', 'x-request-id': 'req_01jgh8g2f9fj4bh314bradfx3v', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:12:08,726 - INFO - Generated background color: #F2F0E8
2025-01-01 21:12:08,726 - INFO - Generated AI color theme: {'bgco': '#F2F0E8', 'textco': '#34495E', 'accent1': '#E74C3C', 'accent2': '#2ECC71', 'shape1': '#7D3C98', 'shape2': '#16A085'}
2025-01-01 21:12:08,726 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:12:08,726 - INFO - Square drawn successfully
2025-01-01 21:12:08,727 - DEBUG - Using text color: #34495E
2025-01-01 21:12:08,727 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:12:08,727 - INFO - Square drawn successfully
2025-01-01 21:12:08,727 - DEBUG - Using text color: #34495E
2025-01-01 21:12:09,221 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:12:09,221 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:12:09,222 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:12:09,222 - DEBUG - send_request_headers.complete
2025-01-01 21:12:09,222 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:12:09,222 - DEBUG - send_request_body.complete
2025-01-01 21:12:09,222 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:12:09,861 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:42:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39e1baaec0337-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14395'), (b'x-ratelimit-remaining-tokens', b'2746'), (b'x-ratelimit-reset-requests', b'28.947s'), (b'x-ratelimit-reset-tokens', b'27.044s'), (b'x-request-id', b'req_01jgh8g3g7fj4b6xwnx4bxcr0t'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:12:09,862 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:12:09,862 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:12:09,862 - DEBUG - receive_response_body.complete
2025-01-01 21:12:09,862 - DEBUG - response_closed.started
2025-01-01 21:12:09,862 - DEBUG - response_closed.complete
2025-01-01 21:12:09,862 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:42:09 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb39e1baaec0337-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14395', 'x-ratelimit-remaining-tokens': '2746', 'x-ratelimit-reset-requests': '28.947s', 'x-ratelimit-reset-tokens': '27.044s', 'x-request-id': 'req_01jgh8g3g7fj4b6xwnx4bxcr0t', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:12:09,862 - INFO - Generated background color: #F2F1F6
2025-01-01 21:12:09,863 - INFO - Generated AI color theme: {'bgco': '#F2F1F6', 'textco': '#34495E', 'accent1': '#E85D3F', 'accent2': '#8ED7D5', 'shape1': '#7D3C98', 'shape2': '#16A085'}
2025-01-01 21:12:09,863 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:12:09,863 - INFO - Square drawn successfully
2025-01-01 21:12:09,863 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:12:09,863 - INFO - Square drawn successfully
2025-01-01 21:12:09,863 - DEBUG - Using text color: #34495E
2025-01-01 21:12:09,864 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:12:09,864 - INFO - Square drawn successfully
2025-01-01 21:12:09,864 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:12:09,864 - INFO - Square drawn successfully
2025-01-01 21:12:09,864 - DEBUG - Using text color: #34495E
2025-01-01 21:12:10,383 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:12:10,384 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:12:10,384 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:12:10,385 - DEBUG - send_request_headers.complete
2025-01-01 21:12:10,385 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:12:10,385 - DEBUG - send_request_body.complete
2025-01-01 21:12:10,385 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:12:10,989 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:42:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39e22ff110337-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14394'), (b'x-ratelimit-remaining-tokens', b'2265'), (b'x-ratelimit-reset-requests', b'34.841s'), (b'x-ratelimit-reset-tokens', b'32.819s'), (b'x-request-id', b'req_01jgh8g4mge51svdtd1ye6v8fv'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:12:10,990 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:12:10,990 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:12:10,991 - DEBUG - receive_response_body.complete
2025-01-01 21:12:10,991 - DEBUG - response_closed.started
2025-01-01 21:12:10,991 - DEBUG - response_closed.complete
2025-01-01 21:12:10,991 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:42:10 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb39e22ff110337-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14394', 'x-ratelimit-remaining-tokens': '2265', 'x-ratelimit-reset-requests': '34.841s', 'x-ratelimit-reset-tokens': '32.819s', 'x-request-id': 'req_01jgh8g4mge51svdtd1ye6v8fv', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:12:10,992 - INFO - Generated background color: #F2F2F2
2025-01-01 21:12:10,993 - INFO - Generated AI color theme: {'bgco': '#F2F2F2', 'textco': '#34495E', 'accent1': '#2980B9', 'accent2': '#E74C3C', 'shape1': '#7D3C98', 'shape2': '#16A085'}
2025-01-01 21:12:10,993 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:12:10,993 - INFO - Square drawn successfully
2025-01-01 21:12:10,994 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:12:10,994 - INFO - Circle drawn successfully
2025-01-01 21:12:10,994 - DEBUG - Using text color: #34495E
2025-01-01 21:12:10,996 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:12:10,996 - INFO - Square drawn successfully
2025-01-01 21:12:10,996 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:12:10,996 - INFO - Circle drawn successfully
2025-01-01 21:12:10,997 - DEBUG - Using text color: #34495E
2025-01-01 21:12:11,515 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:12:11,517 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:12:11,518 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:12:11,518 - DEBUG - send_request_headers.complete
2025-01-01 21:12:11,518 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:12:11,519 - DEBUG - send_request_body.complete
2025-01-01 21:12:11,519 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:12:12,055 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:42:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39e2a0b770337-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14393'), (b'x-ratelimit-remaining-tokens', b'1781'), (b'x-ratelimit-reset-requests', b'40.883s'), (b'x-ratelimit-reset-tokens', b'38.619s'), (b'x-request-id', b'req_01jgh8g5qje8cr7sftyyyag542'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:12:12,057 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:12:12,057 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:12:12,057 - DEBUG - receive_response_body.complete
2025-01-01 21:12:12,058 - DEBUG - response_closed.started
2025-01-01 21:12:12,058 - DEBUG - response_closed.complete
2025-01-01 21:12:12,058 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:42:12 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb39e2a0b770337-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14393', 'x-ratelimit-remaining-tokens': '1781', 'x-ratelimit-reset-requests': '40.883s', 'x-ratelimit-reset-tokens': '38.619s', 'x-request-id': 'req_01jgh8g5qje8cr7sftyyyag542', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:12:12,059 - INFO - Generated background color: #F2F2F2
2025-01-01 21:12:12,059 - INFO - Generated AI color theme: {'bgco': '#F2F2F2', 'textco': '#34495E', 'accent1': '#E87E04', 'accent2': '#1B998B', 'shape1': '#7D3C98', 'shape2': '#A569BD'}
2025-01-01 21:12:12,060 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:12:12,060 - INFO - Circle drawn successfully
2025-01-01 21:12:12,060 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:12:12,060 - INFO - Square drawn successfully
2025-01-01 21:12:12,061 - DEBUG - Using text color: #34495E
2025-01-01 21:12:12,062 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:12:12,062 - INFO - Circle drawn successfully
2025-01-01 21:12:12,062 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:12:12,062 - INFO - Square drawn successfully
2025-01-01 21:12:12,063 - DEBUG - Using text color: #34495E
2025-01-01 21:12:12,662 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:12:12,665 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:12:12,665 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:12:12,666 - DEBUG - send_request_headers.complete
2025-01-01 21:12:12,666 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:12:12,666 - DEBUG - send_request_body.complete
2025-01-01 21:12:12,666 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:12:13,261 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:42:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39e313fd70337-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14392'), (b'x-ratelimit-remaining-tokens', b'1302'), (b'x-ratelimit-reset-requests', b'46.794999999s'), (b'x-ratelimit-reset-tokens', b'44.372s'), (b'x-request-id', b'req_01jgh8g6x2e51tcgy2yyh6csv6'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:12:13,262 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:12:13,262 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:12:13,262 - DEBUG - receive_response_body.complete
2025-01-01 21:12:13,263 - DEBUG - response_closed.started
2025-01-01 21:12:13,263 - DEBUG - response_closed.complete
2025-01-01 21:12:13,263 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:42:13 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb39e313fd70337-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14392', 'x-ratelimit-remaining-tokens': '1302', 'x-ratelimit-reset-requests': '46.794999999s', 'x-ratelimit-reset-tokens': '44.372s', 'x-request-id': 'req_01jgh8g6x2e51tcgy2yyh6csv6', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:12:13,264 - INFO - Generated background color: #F2E9E4
2025-01-01 21:12:13,264 - INFO - Generated AI color theme: {'bgco': '#F2E9E4', 'textco': '#34495E', 'accent1': '#F06C64', 'accent2': '#7D3C98', 'shape1': '#4B3C3C', 'shape2': '#ECF0F1'}
2025-01-01 21:12:13,265 - INFO - Drawing square with color: #4B3C3C
2025-01-01 21:12:13,265 - INFO - Square drawn successfully
2025-01-01 21:12:13,265 - DEBUG - Using text color: #34495E
2025-01-01 21:12:13,267 - INFO - Drawing square with color: #4B3C3C
2025-01-01 21:12:13,267 - INFO - Square drawn successfully
2025-01-01 21:12:13,267 - DEBUG - Using text color: #34495E
2025-01-01 21:12:13,927 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:12:13,928 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:12:13,928 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:12:13,929 - DEBUG - send_request_headers.complete
2025-01-01 21:12:13,929 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:12:13,929 - DEBUG - send_request_body.complete
2025-01-01 21:12:13,930 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:12:14,457 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:42:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39e391cdc0337-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14391'), (b'x-ratelimit-remaining-tokens', b'824'), (b'x-ratelimit-reset-requests', b'52.799999999s'), (b'x-ratelimit-reset-tokens', b'50.107s'), (b'x-request-id', b'req_01jgh8g82ve8dbc8v1agqxmm1q'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:12:14,458 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:12:14,458 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:12:14,459 - DEBUG - receive_response_body.complete
2025-01-01 21:12:14,459 - DEBUG - response_closed.started
2025-01-01 21:12:14,459 - DEBUG - response_closed.complete
2025-01-01 21:12:14,459 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:42:14 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb39e391cdc0337-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14391', 'x-ratelimit-remaining-tokens': '824', 'x-ratelimit-reset-requests': '52.799999999s', 'x-ratelimit-reset-tokens': '50.107s', 'x-request-id': 'req_01jgh8g82ve8dbc8v1agqxmm1q', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:12:14,460 - INFO - Generated background color: #F3F6F5
2025-01-01 21:12:14,460 - INFO - Generated AI color theme: {'bgco': '#F3F6F5', 'textco': '#34495E', 'accent1': '#E74C3C', 'accent2': '#16A085', 'shape1': '#7D3C98', 'shape2': '#D35400'}
2025-01-01 21:12:14,461 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:12:14,461 - INFO - Circle drawn successfully
2025-01-01 21:12:14,461 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:12:14,461 - INFO - Circle drawn successfully
2025-01-01 21:12:14,462 - DEBUG - Using text color: #34495E
2025-01-01 21:12:14,463 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:12:14,463 - INFO - Circle drawn successfully
2025-01-01 21:12:14,464 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:12:14,464 - INFO - Circle drawn successfully
2025-01-01 21:12:14,464 - DEBUG - Using text color: #34495E
2025-01-01 21:12:15,133 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:12:15,135 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:12:15,136 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:12:15,136 - DEBUG - send_request_headers.complete
2025-01-01 21:12:15,136 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:12:15,136 - DEBUG - send_request_body.complete
2025-01-01 21:12:15,136 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:12:15,679 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:42:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39e40a9ee0337-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14390'), (b'x-ratelimit-remaining-tokens', b'343'), (b'x-ratelimit-reset-requests', b'58.807999999s'), (b'x-ratelimit-reset-tokens', b'55.874s'), (b'x-request-id', b'req_01jgh8g984fj4aemtshdgsdhje'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:12:15,680 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:12:15,680 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:12:15,681 - DEBUG - receive_response_body.complete
2025-01-01 21:12:15,681 - DEBUG - response_closed.started
2025-01-01 21:12:15,681 - DEBUG - response_closed.complete
2025-01-01 21:12:15,681 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:42:15 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb39e40a9ee0337-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14390', 'x-ratelimit-remaining-tokens': '343', 'x-ratelimit-reset-requests': '58.807999999s', 'x-ratelimit-reset-tokens': '55.874s', 'x-request-id': 'req_01jgh8g984fj4aemtshdgsdhje', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:12:15,682 - INFO - Generated background color: #F2F3F7
2025-01-01 21:12:15,682 - INFO - Generated AI color theme: {'bgco': '#F2F3F7', 'textco': '#34495E', 'accent1': '#2ECC71', 'accent2': '#7D3C98', 'shape1': '#E8D8D0', 'shape2': '#D35400'}
2025-01-01 21:12:15,683 - INFO - Drawing circle with color: #E8D8D0
2025-01-01 21:12:15,683 - INFO - Circle drawn successfully
2025-01-01 21:12:15,683 - INFO - Drawing circle with color: #E8D8D0
2025-01-01 21:12:15,683 - INFO - Circle drawn successfully
2025-01-01 21:12:15,684 - DEBUG - Using text color: #34495E
2025-01-01 21:12:15,685 - INFO - Drawing circle with color: #E8D8D0
2025-01-01 21:12:15,685 - INFO - Circle drawn successfully
2025-01-01 21:12:15,685 - INFO - Drawing circle with color: #E8D8D0
2025-01-01 21:12:15,686 - INFO - Circle drawn successfully
2025-01-01 21:12:15,686 - DEBUG - Using text color: #34495E
2025-01-01 21:12:16,264 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:12:16,266 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:12:16,266 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:12:16,267 - DEBUG - send_request_headers.complete
2025-01-01 21:12:16,267 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:12:16,267 - DEBUG - send_request_body.complete
2025-01-01 21:12:16,267 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:12:16,593 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 01 Jan 2025 15:42:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39e47beaf0337-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Retry-After', b'2'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14390'), (b'x-ratelimit-remaining-tokens', b'325'), (b'x-ratelimit-reset-requests', b'58.835s'), (b'x-ratelimit-reset-tokens', b'56.097s'), (b'x-request-id', b'req_01jgh8gacge8c8pw5hqa1e3fn0'), (b'Server', b'cloudflare')])
2025-01-01 21:12:16,594 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-01-01 21:12:16,594 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:12:16,595 - DEBUG - receive_response_body.complete
2025-01-01 21:12:16,595 - DEBUG - response_closed.started
2025-01-01 21:12:16,595 - DEBUG - response_closed.complete
2025-01-01 21:12:16,595 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Wed, 01 Jan 2025 15:42:16 GMT', 'content-type': 'application/json', 'content-length': '332', 'connection': 'keep-alive', 'cf-ray': '8fb39e47beaf0337-AMD', 'cf-cache-status': 'DYNAMIC', 'retry-after': '2', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14390', 'x-ratelimit-remaining-tokens': '325', 'x-ratelimit-reset-requests': '58.835s', 'x-ratelimit-reset-tokens': '56.097s', 'x-request-id': 'req_01jgh8gacge8c8pw5hqa1e3fn0', 'server': 'cloudflare'})
2025-01-01 21:12:16,595 - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/varunisrani/Desktop/v1/myenv/lib/python3.11/site-packages/groq/_base_client.py", line 1037, in _request
    response.raise_for_status()
  File "/Users/varunisrani/Desktop/v1/myenv/lib/python3.11/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-01-01 21:12:16,599 - DEBUG - Retrying due to status code 429
2025-01-01 21:12:16,599 - DEBUG - 2 retries left
2025-01-01 21:12:16,599 - INFO - Retrying request to /openai/v1/chat/completions in 2.000000 seconds
2025-01-01 21:12:18,604 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:12:18,606 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:12:18,607 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:12:18,607 - DEBUG - send_request_headers.complete
2025-01-01 21:12:18,607 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:12:18,608 - DEBUG - send_request_body.complete
2025-01-01 21:12:18,608 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:12:19,296 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:42:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39e566fd00337-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14389'), (b'x-ratelimit-remaining-tokens', b'64'), (b'x-ratelimit-reset-requests', b'1m2.386999999s'), (b'x-ratelimit-reset-tokens', b'59.228s'), (b'x-request-id', b'req_01jgh8gcrxf0h9gxcxfm5rd9sn'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:12:19,296 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:12:19,296 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:12:19,297 - DEBUG - receive_response_body.complete
2025-01-01 21:12:19,297 - DEBUG - response_closed.started
2025-01-01 21:12:19,297 - DEBUG - response_closed.complete
2025-01-01 21:12:19,297 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:42:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb39e566fd00337-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14389', 'x-ratelimit-remaining-tokens': '64', 'x-ratelimit-reset-requests': '1m2.386999999s', 'x-ratelimit-reset-tokens': '59.228s', 'x-request-id': 'req_01jgh8gcrxf0h9gxcxfm5rd9sn', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:12:19,298 - INFO - Generated background color: #F2F2F7
2025-01-01 21:12:19,298 - INFO - Generated AI color theme: {'bgco': '#F2F2F7', 'textco': '#34495E', 'accent1': '#2980B9', 'accent2': '#E74C3C', 'shape1': '#7D3C98', 'shape2': '#16A085'}
2025-01-01 21:12:19,298 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:12:19,298 - INFO - Circle drawn successfully
2025-01-01 21:12:19,298 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:12:19,298 - INFO - Circle drawn successfully
2025-01-01 21:12:19,299 - DEBUG - Using text color: #34495E
2025-01-01 21:12:19,300 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:12:19,300 - INFO - Circle drawn successfully
2025-01-01 21:12:19,300 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:12:19,300 - INFO - Circle drawn successfully
2025-01-01 21:12:19,301 - DEBUG - Using text color: #34495E
2025-01-01 21:12:19,890 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:12:19,892 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:12:19,893 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:12:19,893 - DEBUG - send_request_headers.complete
2025-01-01 21:12:19,893 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:12:19,894 - DEBUG - send_request_body.complete
2025-01-01 21:12:19,894 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:12:20,407 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 01 Jan 2025 15:42:20 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39e5e6cbb0337-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Retry-After', b'6'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14389'), (b'x-ratelimit-remaining-tokens', b'48'), (b'x-ratelimit-reset-requests', b'1m4.750999999s'), (b'x-ratelimit-reset-tokens', b'59.424s'), (b'x-request-id', b'req_01jgh8gdzye8ebhmfwgyveyc6s'), (b'Server', b'cloudflare')])
2025-01-01 21:12:20,408 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-01-01 21:12:20,409 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:12:20,409 - DEBUG - receive_response_body.complete
2025-01-01 21:12:20,409 - DEBUG - response_closed.started
2025-01-01 21:12:20,409 - DEBUG - response_closed.complete
2025-01-01 21:12:20,409 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Wed, 01 Jan 2025 15:42:20 GMT', 'content-type': 'application/json', 'content-length': '332', 'connection': 'keep-alive', 'cf-ray': '8fb39e5e6cbb0337-AMD', 'cf-cache-status': 'DYNAMIC', 'retry-after': '6', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14389', 'x-ratelimit-remaining-tokens': '48', 'x-ratelimit-reset-requests': '1m4.750999999s', 'x-ratelimit-reset-tokens': '59.424s', 'x-request-id': 'req_01jgh8gdzye8ebhmfwgyveyc6s', 'server': 'cloudflare'})
2025-01-01 21:12:20,410 - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/varunisrani/Desktop/v1/myenv/lib/python3.11/site-packages/groq/_base_client.py", line 1037, in _request
    response.raise_for_status()
  File "/Users/varunisrani/Desktop/v1/myenv/lib/python3.11/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-01-01 21:12:20,410 - DEBUG - Retrying due to status code 429
2025-01-01 21:12:20,410 - DEBUG - 2 retries left
2025-01-01 21:12:20,411 - INFO - Retrying request to /openai/v1/chat/completions in 6.000000 seconds
2025-01-01 21:12:26,413 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:12:26,416 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:12:26,417 - DEBUG - close.started
2025-01-01 21:12:26,417 - DEBUG - close.complete
2025-01-01 21:12:26,418 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-01-01 21:12:26,432 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1106d06d0>
2025-01-01 21:12:26,432 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x110734050> server_hostname='api.groq.com' timeout=5.0
2025-01-01 21:12:26,447 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x110a54c90>
2025-01-01 21:12:26,447 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:12:26,447 - DEBUG - send_request_headers.complete
2025-01-01 21:12:26,447 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:12:26,447 - DEBUG - send_request_body.complete
2025-01-01 21:12:26,447 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:12:27,036 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:42:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39e8759ab0333-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14389'), (b'x-ratelimit-remaining-tokens', b'126'), (b'x-ratelimit-reset-requests', b'1m4.233s'), (b'x-ratelimit-reset-tokens', b'58.485s'), (b'x-request-id', b'req_01jgh8gmbne8dr7ne73xc5d5gs'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:12:27,037 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:12:27,038 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:12:27,038 - DEBUG - receive_response_body.complete
2025-01-01 21:12:27,038 - DEBUG - response_closed.started
2025-01-01 21:12:27,039 - DEBUG - response_closed.complete
2025-01-01 21:12:27,039 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:42:27 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb39e8759ab0333-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14389', 'x-ratelimit-remaining-tokens': '126', 'x-ratelimit-reset-requests': '1m4.233s', 'x-ratelimit-reset-tokens': '58.485s', 'x-request-id': 'req_01jgh8gmbne8dr7ne73xc5d5gs', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:12:27,040 - INFO - Generated background color: #F0F8FF
2025-01-01 21:12:27,041 - INFO - Generated AI color theme: {'bgco': '#F0F8FF', 'textco': '#2C3E50', 'accent1': '#E74C3C', 'accent2': '#2980B9', 'shape1': '#7D3C98', 'shape2': '#16A085'}
2025-01-01 21:12:27,041 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:12:27,042 - INFO - Square drawn successfully
2025-01-01 21:12:27,042 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:12:27,042 - INFO - Circle drawn successfully
2025-01-01 21:12:27,043 - DEBUG - Using text color: #2C3E50
2025-01-01 21:12:27,044 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:12:27,044 - INFO - Square drawn successfully
2025-01-01 21:12:27,044 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:12:27,045 - INFO - Circle drawn successfully
2025-01-01 21:12:27,045 - DEBUG - Using text color: #2C3E50
2025-01-01 21:13:11,420 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:13:11,421 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:13:11,421 - DEBUG - close.started
2025-01-01 21:13:11,422 - DEBUG - close.complete
2025-01-01 21:13:11,422 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-01-01 21:13:11,430 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x110a96d50>
2025-01-01 21:13:11,430 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x110734050> server_hostname='api.groq.com' timeout=5.0
2025-01-01 21:13:11,444 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x110a96c50>
2025-01-01 21:13:11,445 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:13:11,445 - DEBUG - send_request_headers.complete
2025-01-01 21:13:11,445 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:13:11,446 - DEBUG - send_request_body.complete
2025-01-01 21:13:11,446 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:13:12,838 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:43:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39fa089810332-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14395'), (b'x-ratelimit-remaining-tokens', b'3363'), (b'x-ratelimit-reset-requests', b'26.231999999s'), (b'x-ratelimit-reset-tokens', b'19.643s'), (b'x-request-id', b'req_01jgh8j11xe5qa37f2b3tx7n28'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:13:12,839 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:13:12,839 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:13:12,840 - DEBUG - receive_response_body.complete
2025-01-01 21:13:12,840 - DEBUG - response_closed.started
2025-01-01 21:13:12,840 - DEBUG - response_closed.complete
2025-01-01 21:13:12,840 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:43:12 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb39fa089810332-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14395', 'x-ratelimit-remaining-tokens': '3363', 'x-ratelimit-reset-requests': '26.231999999s', 'x-ratelimit-reset-tokens': '19.643s', 'x-request-id': 'req_01jgh8j11xe5qa37f2b3tx7n28', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:13:12,842 - INFO - Generated background color: #F2F0EA
2025-01-01 21:13:12,842 - INFO - Generated AI color theme: {'bgco': '#F2F0EA', 'textco': '#34495E', 'accent1': '#E87E74', 'accent2': '#2ECC71', 'shape1': '#7D3C98', 'shape2': '#D35400'}
2025-01-01 21:13:12,843 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:13:12,843 - INFO - Circle drawn successfully
2025-01-01 21:13:12,843 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:13:12,843 - INFO - Square drawn successfully
2025-01-01 21:13:12,844 - DEBUG - Using text color: #34495E
2025-01-01 21:13:12,845 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:13:12,845 - INFO - Circle drawn successfully
2025-01-01 21:13:12,845 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:13:12,845 - INFO - Square drawn successfully
2025-01-01 21:13:12,846 - DEBUG - Using text color: #34495E
2025-01-01 21:13:17,939 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:13:17,940 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:13:17,941 - DEBUG - close.started
2025-01-01 21:13:17,941 - DEBUG - close.complete
2025-01-01 21:13:17,941 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-01-01 21:13:17,948 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x110a37e10>
2025-01-01 21:13:17,948 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x110734050> server_hostname='api.groq.com' timeout=5.0
2025-01-01 21:13:17,961 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x110a57d10>
2025-01-01 21:13:17,961 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:13:17,962 - DEBUG - send_request_headers.complete
2025-01-01 21:13:17,962 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:13:17,962 - DEBUG - send_request_body.complete
2025-01-01 21:13:17,962 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:13:18,724 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:43:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39fc948710332-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14394'), (b'x-ratelimit-remaining-tokens', b'3263'), (b'x-ratelimit-reset-requests', b'30.287s'), (b'x-ratelimit-reset-tokens', b'20.844s'), (b'x-request-id', b'req_01jgh8j6mhfmbt10fcxk7zgx3v'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:13:18,724 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:13:18,725 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:13:18,725 - DEBUG - receive_response_body.complete
2025-01-01 21:13:18,726 - DEBUG - response_closed.started
2025-01-01 21:13:18,726 - DEBUG - response_closed.complete
2025-01-01 21:13:18,726 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:43:18 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb39fc948710332-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14394', 'x-ratelimit-remaining-tokens': '3263', 'x-ratelimit-reset-requests': '30.287s', 'x-ratelimit-reset-tokens': '20.844s', 'x-request-id': 'req_01jgh8j6mhfmbt10fcxk7zgx3v', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:13:18,727 - INFO - Generated background color: #F2F6FA
2025-01-01 21:13:18,727 - INFO - Generated AI color theme: {'bgco': '#F2F6FA', 'textco': '#34495E', 'accent1': '#2980B9', 'accent2': '#E74C3C', 'shape1': '#7D3C98', 'shape2': '#16A085'}
2025-01-01 21:13:18,728 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:13:18,728 - INFO - Square drawn successfully
2025-01-01 21:13:18,728 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:13:18,728 - INFO - Circle drawn successfully
2025-01-01 21:13:18,729 - DEBUG - Using text color: #34495E
2025-01-01 21:13:18,730 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:13:18,731 - INFO - Square drawn successfully
2025-01-01 21:13:18,731 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:13:18,731 - INFO - Circle drawn successfully
2025-01-01 21:13:18,732 - DEBUG - Using text color: #34495E
2025-01-01 21:13:19,270 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:13:19,272 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:13:19,272 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:13:19,273 - DEBUG - send_request_headers.complete
2025-01-01 21:13:19,273 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:13:19,273 - DEBUG - send_request_body.complete
2025-01-01 21:13:19,273 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:13:19,904 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:43:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39fd17e200332-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14393'), (b'x-ratelimit-remaining-tokens', b'2786'), (b'x-ratelimit-reset-requests', b'40.715s'), (b'x-ratelimit-reset-tokens', b'26.558s'), (b'x-request-id', b'req_01jgh8j7wpfmbvc9hhzrvj8q7w'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:13:19,905 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:13:19,906 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:13:19,906 - DEBUG - receive_response_body.complete
2025-01-01 21:13:19,906 - DEBUG - response_closed.started
2025-01-01 21:13:19,907 - DEBUG - response_closed.complete
2025-01-01 21:13:19,907 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:43:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb39fd17e200332-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14393', 'x-ratelimit-remaining-tokens': '2786', 'x-ratelimit-reset-requests': '40.715s', 'x-ratelimit-reset-tokens': '26.558s', 'x-request-id': 'req_01jgh8j7wpfmbvc9hhzrvj8q7w', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:13:19,908 - INFO - Generated background color: #F2F2F2
2025-01-01 21:13:19,908 - INFO - Generated AI color theme: {'bgco': '#F2F2F2', 'textco': '#34495E', 'accent1': '#2980B9', 'accent2': '#8E44AD', 'shape1': '#E7D0CB', 'shape2': '#D99687'}
2025-01-01 21:13:19,908 - INFO - Drawing circle with color: #E7D0CB
2025-01-01 21:13:19,909 - INFO - Circle drawn successfully
2025-01-01 21:13:19,909 - INFO - Drawing circle with color: #E7D0CB
2025-01-01 21:13:19,909 - INFO - Circle drawn successfully
2025-01-01 21:13:19,909 - DEBUG - Using text color: #34495E
2025-01-01 21:13:19,911 - INFO - Drawing circle with color: #E7D0CB
2025-01-01 21:13:19,911 - INFO - Circle drawn successfully
2025-01-01 21:13:19,911 - INFO - Drawing circle with color: #E7D0CB
2025-01-01 21:13:19,911 - INFO - Circle drawn successfully
2025-01-01 21:13:19,912 - DEBUG - Using text color: #34495E
2025-01-01 21:13:20,474 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:13:20,476 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:13:20,476 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:13:20,477 - DEBUG - send_request_headers.complete
2025-01-01 21:13:20,477 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:13:20,477 - DEBUG - send_request_body.complete
2025-01-01 21:13:20,477 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:13:21,728 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:43:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39fd90b530332-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14392'), (b'x-ratelimit-remaining-tokens', b'2370'), (b'x-ratelimit-reset-requests', b'46.08s'), (b'x-ratelimit-reset-tokens', b'31.558s'), (b'x-request-id', b'req_01jgh8j9rqfrfbfhd2hyq5fhtn'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:13:21,729 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:13:21,729 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:13:21,729 - DEBUG - receive_response_body.complete
2025-01-01 21:13:21,729 - DEBUG - response_closed.started
2025-01-01 21:13:21,729 - DEBUG - response_closed.complete
2025-01-01 21:13:21,730 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:43:21 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb39fd90b530332-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14392', 'x-ratelimit-remaining-tokens': '2370', 'x-ratelimit-reset-requests': '46.08s', 'x-ratelimit-reset-tokens': '31.558s', 'x-request-id': 'req_01jgh8j9rqfrfbfhd2hyq5fhtn', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:13:21,730 - INFO - Generated background color: #F2F2F7
2025-01-01 21:13:21,730 - INFO - Generated AI color theme: {'bgco': '#F2F2F7', 'textco': '#34495E', 'accent1': '#E74C3C', 'accent2': '#27AE60', 'shape1': '#7D3C98', 'shape2': '#16A085'}
2025-01-01 21:13:21,731 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:13:21,731 - INFO - Circle drawn successfully
2025-01-01 21:13:21,731 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:13:21,731 - INFO - Square drawn successfully
2025-01-01 21:13:21,732 - DEBUG - Using text color: #34495E
2025-01-01 21:13:21,733 - INFO - Drawing circle with color: #7D3C98
2025-01-01 21:13:21,733 - INFO - Circle drawn successfully
2025-01-01 21:13:21,733 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:13:21,734 - INFO - Square drawn successfully
2025-01-01 21:13:21,734 - DEBUG - Using text color: #34495E
2025-01-01 21:13:22,290 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:13:22,291 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:13:22,291 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:13:22,292 - DEBUG - send_request_headers.complete
2025-01-01 21:13:22,292 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:13:22,292 - DEBUG - send_request_body.complete
2025-01-01 21:13:22,292 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:13:22,976 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:43:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb39fe46a540332-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14391'), (b'x-ratelimit-remaining-tokens', b'1890'), (b'x-ratelimit-reset-requests', b'52.823s'), (b'x-ratelimit-reset-tokens', b'37.319s'), (b'x-request-id', b'req_01jgh8jaxhe5rb372gdbjbzecb'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:13:22,977 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:13:22,977 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:13:22,978 - DEBUG - receive_response_body.complete
2025-01-01 21:13:22,978 - DEBUG - response_closed.started
2025-01-01 21:13:22,978 - DEBUG - response_closed.complete
2025-01-01 21:13:22,978 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:43:22 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb39fe46a540332-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14391', 'x-ratelimit-remaining-tokens': '1890', 'x-ratelimit-reset-requests': '52.823s', 'x-ratelimit-reset-tokens': '37.319s', 'x-request-id': 'req_01jgh8jaxhe5rb372gdbjbzecb', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:13:22,979 - INFO - Generated background color: #F2F5F7
2025-01-01 21:13:22,979 - INFO - Generated AI color theme: {'bgco': '#F2F5F7', 'textco': '#2C3E50', 'accent1': '#4CAF50', 'accent2': '#E91E63', 'shape1': '#9C27B0', 'shape2': '#FFC107'}
2025-01-01 21:13:22,980 - INFO - Drawing square with color: #9C27B0
2025-01-01 21:13:22,980 - INFO - Square drawn successfully
2025-01-01 21:13:22,980 - INFO - Drawing square with color: #9C27B0
2025-01-01 21:13:22,980 - INFO - Square drawn successfully
2025-01-01 21:13:22,981 - DEBUG - Using text color: #2C3E50
2025-01-01 21:13:22,983 - INFO - Drawing square with color: #9C27B0
2025-01-01 21:13:22,983 - INFO - Square drawn successfully
2025-01-01 21:13:22,983 - INFO - Drawing square with color: #9C27B0
2025-01-01 21:13:22,983 - INFO - Square drawn successfully
2025-01-01 21:13:22,984 - DEBUG - Using text color: #2C3E50
2025-01-01 21:13:38,848 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:13:38,850 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:13:38,851 - DEBUG - close.started
2025-01-01 21:13:38,851 - DEBUG - close.complete
2025-01-01 21:13:38,851 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-01-01 21:13:38,885 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x110aade90>
2025-01-01 21:13:38,885 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x110734050> server_hostname='api.groq.com' timeout=5.0
2025-01-01 21:13:38,897 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x110aadad0>
2025-01-01 21:13:38,897 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:13:38,898 - DEBUG - send_request_headers.complete
2025-01-01 21:13:38,898 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:13:38,898 - DEBUG - send_request_body.complete
2025-01-01 21:13:38,898 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:13:39,566 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:43:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb3a04c2c530333-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14392'), (b'x-ratelimit-remaining-tokens', b'2684'), (b'x-ratelimit-reset-requests', b'43.371999999s'), (b'x-ratelimit-reset-tokens', b'27.792s'), (b'x-request-id', b'req_01jgh8jv57e8kr8cvmf6xsfam9'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:13:39,567 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:13:39,567 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:13:39,568 - DEBUG - receive_response_body.complete
2025-01-01 21:13:39,568 - DEBUG - response_closed.started
2025-01-01 21:13:39,568 - DEBUG - response_closed.complete
2025-01-01 21:13:39,569 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:43:39 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb3a04c2c530333-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14392', 'x-ratelimit-remaining-tokens': '2684', 'x-ratelimit-reset-requests': '43.371999999s', 'x-ratelimit-reset-tokens': '27.792s', 'x-request-id': 'req_01jgh8jv57e8kr8cvmf6xsfam9', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:13:39,570 - INFO - Generated background color: #F0F5FA
2025-01-01 21:13:39,570 - INFO - Generated AI color theme: {'bgco': '#F0F5FA', 'textco': '#2C3E50', 'accent1': '#E74C3C', 'accent2': '#2980B9', 'shape1': '#7D3C98', 'shape2': '#16A085'}
2025-01-01 21:13:39,571 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:13:39,571 - INFO - Square drawn successfully
2025-01-01 21:13:39,571 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:13:39,572 - INFO - Square drawn successfully
2025-01-01 21:13:39,572 - DEBUG - Using text color: #2C3E50
2025-01-01 21:13:39,574 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:13:39,574 - INFO - Square drawn successfully
2025-01-01 21:13:39,574 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:13:39,575 - INFO - Square drawn successfully
2025-01-01 21:13:39,575 - DEBUG - Using text color: #2C3E50
2025-01-01 21:13:40,164 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:13:40,167 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:13:40,167 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:13:40,168 - DEBUG - send_request_headers.complete
2025-01-01 21:13:40,168 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:13:40,168 - DEBUG - send_request_body.complete
2025-01-01 21:13:40,168 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:13:40,897 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:43:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb3a05418eb0333-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14391'), (b'x-ratelimit-remaining-tokens', b'2210'), (b'x-ratelimit-reset-requests', b'52.739s'), (b'x-ratelimit-reset-tokens', b'33.478s'), (b'x-request-id', b'req_01jgh8jwcseqxtbmhmp07z01gz'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:13:40,898 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:13:40,899 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:13:40,899 - DEBUG - receive_response_body.complete
2025-01-01 21:13:40,899 - DEBUG - response_closed.started
2025-01-01 21:13:40,900 - DEBUG - response_closed.complete
2025-01-01 21:13:40,900 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:43:40 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb3a05418eb0333-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14391', 'x-ratelimit-remaining-tokens': '2210', 'x-ratelimit-reset-requests': '52.739s', 'x-ratelimit-reset-tokens': '33.478s', 'x-request-id': 'req_01jgh8jwcseqxtbmhmp07z01gz', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:13:40,901 - INFO - Generated background color: #F2F2F5
2025-01-01 21:13:40,901 - INFO - Generated AI color theme: {'bgco': '#F2F2F5', 'textco': '#34495E', 'accent1': '#E74C3C', 'accent2': '#27AE60', 'shape1': '#7D3C98', 'shape2': '#16A085'}
2025-01-01 21:13:40,901 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:13:40,901 - INFO - Square drawn successfully
2025-01-01 21:13:40,901 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:13:40,902 - INFO - Square drawn successfully
2025-01-01 21:13:40,902 - DEBUG - Using text color: #34495E
2025-01-01 21:13:40,904 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:13:40,904 - INFO - Square drawn successfully
2025-01-01 21:13:40,904 - INFO - Drawing square with color: #7D3C98
2025-01-01 21:13:40,904 - INFO - Square drawn successfully
2025-01-01 21:13:40,905 - DEBUG - Using text color: #34495E
2025-01-01 21:13:41,545 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:13:41,547 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:13:41,547 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:13:41,548 - DEBUG - send_request_headers.complete
2025-01-01 21:13:41,548 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:13:41,548 - DEBUG - send_request_body.complete
2025-01-01 21:13:41,548 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:13:42,228 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:43:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb3a05cbe650333-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14390'), (b'x-ratelimit-remaining-tokens', b'1740'), (b'x-ratelimit-reset-requests', b'58.682s'), (b'x-ratelimit-reset-tokens', b'39.116s'), (b'x-request-id', b'req_01jgh8jxp0fmev76pcmjn69myh'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:13:42,229 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:13:42,229 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:13:42,230 - DEBUG - receive_response_body.complete
2025-01-01 21:13:42,230 - DEBUG - response_closed.started
2025-01-01 21:13:42,230 - DEBUG - response_closed.complete
2025-01-01 21:13:42,230 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:43:42 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb3a05cbe650333-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14390', 'x-ratelimit-remaining-tokens': '1740', 'x-ratelimit-reset-requests': '58.682s', 'x-ratelimit-reset-tokens': '39.116s', 'x-request-id': 'req_01jgh8jxp0fmev76pcmjn69myh', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:13:42,231 - INFO - Generated background color: #F2F3F7
2025-01-01 21:13:42,231 - INFO - Generated AI color theme: {'bgco': '#F2F3F7', 'textco': '#34495E', 'accent1': '#2980B9', 'accent2': '#8E44AD', 'shape1': '#16A085', 'shape2': '#D35400'}
2025-01-01 21:13:42,232 - INFO - Drawing square with color: #16A085
2025-01-01 21:13:42,232 - INFO - Square drawn successfully
2025-01-01 21:13:42,232 - INFO - Drawing circle with color: #16A085
2025-01-01 21:13:42,233 - INFO - Circle drawn successfully
2025-01-01 21:13:42,233 - DEBUG - Using text color: #34495E
2025-01-01 21:13:42,234 - INFO - Drawing square with color: #16A085
2025-01-01 21:13:42,235 - INFO - Square drawn successfully
2025-01-01 21:13:42,235 - INFO - Drawing circle with color: #16A085
2025-01-01 21:13:42,235 - INFO - Circle drawn successfully
2025-01-01 21:13:42,235 - DEBUG - Using text color: #34495E
2025-01-01 21:13:42,755 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:13:42,756 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:13:42,757 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:13:42,757 - DEBUG - send_request_headers.complete
2025-01-01 21:13:42,757 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:13:42,758 - DEBUG - send_request_body.complete
2025-01-01 21:13:42,758 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:13:43,456 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:43:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb3a0644b5e0333-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14389'), (b'x-ratelimit-remaining-tokens', b'1263'), (b'x-ratelimit-reset-requests', b'1m4.804999999s'), (b'x-ratelimit-reset-tokens', b'44.837s'), (b'x-request-id', b'req_01jgh8jyvceqxtppq37a8zgfmk'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:13:43,458 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:13:43,458 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:13:43,458 - DEBUG - receive_response_body.complete
2025-01-01 21:13:43,459 - DEBUG - response_closed.started
2025-01-01 21:13:43,459 - DEBUG - response_closed.complete
2025-01-01 21:13:43,459 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:43:43 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb3a0644b5e0333-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14389', 'x-ratelimit-remaining-tokens': '1263', 'x-ratelimit-reset-requests': '1m4.804999999s', 'x-ratelimit-reset-tokens': '44.837s', 'x-request-id': 'req_01jgh8jyvceqxtppq37a8zgfmk', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:13:43,460 - INFO - Generated background color: #F2F1F5
2025-01-01 21:13:43,460 - INFO - Generated AI color theme: {'bgco': '#F2F1F5', 'textco': '#2C3E50', 'accent1': '#16A085', 'accent2': '#D35400', 'shape1': '#E74C3C', 'shape2': '#7D3C98'}
2025-01-01 21:13:43,461 - INFO - Drawing square with color: #E74C3C
2025-01-01 21:13:43,461 - INFO - Square drawn successfully
2025-01-01 21:13:43,461 - INFO - Drawing square with color: #E74C3C
2025-01-01 21:13:43,461 - INFO - Square drawn successfully
2025-01-01 21:13:43,462 - DEBUG - Using text color: #2C3E50
2025-01-01 21:13:43,463 - INFO - Drawing square with color: #E74C3C
2025-01-01 21:13:43,463 - INFO - Square drawn successfully
2025-01-01 21:13:43,463 - INFO - Drawing square with color: #E74C3C
2025-01-01 21:13:43,464 - INFO - Square drawn successfully
2025-01-01 21:13:43,464 - DEBUG - Using text color: #2C3E50
2025-01-01 21:13:43,934 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Create a unique and harmonious color theme for a testimonial about iphone.\n\n            Rules for color selection:\n            1. Create exactly 6 unique colors in hex format:\n               - Background Color (bgco): Create a UNIQUE light color. Must be different each time.\n                 Examples: #F5F6FA, #FDF6F0, #F0E5D8, #E8D8D0, #F5F0E1, #ECF5FF\n                 Rules: \n                 - Must start with F or E (to ensure lightness)\n                 - Each background must be unique\n                 - Can be warm or cool toned\n               \n               - Text Color (textco): Dark and readable\n                 Examples: #2C3E50, #34495E, #4B3C3C, #3C2B2B, #5E4D3E\n               \n               - Accent Colors and Shape Colors: Create vibrant and complementary colors\n                 Examples for accents: #E74C3C, #2980B9, #8E44AD, #27AE60\n                 Examples for shapes: #7D3C98, #16A085, #D35400, #2ECC71\n\n            Requirements:\n            - Background MUST be unique and different from previous ones\n            - Text must be dark enough for readability\n            - Colors must work harmoniously together\n            - Each color must be different from others\n\n            Return in this format:\n            Testimonial: [write a positive 2-3 sentence testimonial]\n            Colors:\n            bgco: [unique light hex code starting with F or E]\n            textco: [dark hex code]\n            accent1: [vibrant hex code]\n            accent2: [vibrant hex code]\n            shape1: [complementary hex code]\n            shape2: [complementary hex code]'}], 'model': 'mixtral-8x7b-32768', 'max_tokens': 200, 'temperature': 0.95}}
2025-01-01 21:13:43,936 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-01-01 21:13:43,937 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-01 21:13:43,937 - DEBUG - send_request_headers.complete
2025-01-01 21:13:43,937 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-01 21:13:43,938 - DEBUG - send_request_body.complete
2025-01-01 21:13:43,938 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-01 21:13:44,582 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 01 Jan 2025 15:43:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8fb3a06ba80a0333-AMD'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'5000'), (b'x-ratelimit-remaining-requests', b'14388'), (b'x-ratelimit-remaining-tokens', b'775'), (b'x-ratelimit-reset-requests', b'1m10.847s'), (b'x-ratelimit-reset-tokens', b'50.692s'), (b'x-request-id', b'req_01jgh8jzzde8mv1qg1k8d7zazc'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2025-01-01 21:13:44,583 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-01-01 21:13:44,584 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-01 21:13:44,584 - DEBUG - receive_response_body.complete
2025-01-01 21:13:44,585 - DEBUG - response_closed.started
2025-01-01 21:13:44,585 - DEBUG - response_closed.complete
2025-01-01 21:13:44,585 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 01 Jan 2025 15:43:44 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8fb3a06ba80a0333-AMD', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '5000', 'x-ratelimit-remaining-requests': '14388', 'x-ratelimit-remaining-tokens': '775', 'x-ratelimit-reset-requests': '1m10.847s', 'x-ratelimit-reset-tokens': '50.692s', 'x-request-id': 'req_01jgh8jzzde8mv1qg1k8d7zazc', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2025-01-01 21:13:44,586 - INFO - Generated background color: #F2F2F2
2025-01-01 21:13:44,586 - INFO - Generated AI color theme: {'bgco': '#F2F2F2', 'textco': '#333333', 'accent1': '#4CAF50', 'accent2': '#2196F3', 'shape1': '#9C27B0', 'shape2': '#FFC107'}
2025-01-01 21:13:44,587 - INFO - Drawing circle with color: #9C27B0
2025-01-01 21:13:44,587 - INFO - Circle drawn successfully
2025-01-01 21:13:44,587 - INFO - Drawing square with color: #9C27B0
2025-01-01 21:13:44,588 - INFO - Square drawn successfully
2025-01-01 21:13:44,589 - DEBUG - Using text color: #333333
2025-01-01 21:13:44,591 - INFO - Drawing circle with color: #9C27B0
2025-01-01 21:13:44,591 - INFO - Circle drawn successfully
2025-01-01 21:13:44,591 - INFO - Drawing square with color: #9C27B0
2025-01-01 21:13:44,591 - INFO - Square drawn successfully
2025-01-01 21:13:44,592 - DEBUG - Using text color: #333333
2025-01-01 21:15:31,015 - DEBUG - close.started
2025-01-01 21:15:31,016 - DEBUG - close.complete
