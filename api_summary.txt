TESTIMONIAL GENERATOR API - OVERVIEW

1. DEPENDENCIES
   ├── FastAPI: Web framework
   ├── Pydantic: Data validation
   ├── CORS: Cross-origin support
   ├── SVGWrite: SVG generation
   └── Groq: AI text generation

2. CORE ENDPOINTS
   ├── POST /generate-testimonial
   │   └── Creates new testimonial with SVG components
   │
   ├── POST /update-design
   │   └── Updates existing design elements
   │
   ├── GET /color-schemes
   │   └── Retrieves color palettes and themes
   │
   ├── GET /shape-patterns
   │   └── Fetches available shape patterns
   │
   └── POST /upload-font
       └── Handles custom font uploads

3. DATA MODELS
   ├── TestimonialRequest
   │   ├── topic: str
   │   ├── selected_shapes: List[str]
   │   ├── font_size: int
   │   └── colors: Dict[str, str]
   │
   └── SVGResponse
       ├── background_svg: str
       ├── shapes_svg: str
       ├── text_svg: str
       └── combined_svg: str

4. CORE SERVICES
   ├── TestimonialGenerator
   │   ├── Text generation
   │   └── SVG rendering
   │
   └── SVGShapeGenerator
       └── Shape pattern rendering

5. FILE STRUCTURE
   ├── app.py: API endpoints
   └── testimonial_generator.py: Core logic

6. SETUP REQUIREMENTS
   ```bash
   pip install fastapi uvicorn pydantic python-multipart groq svgwrite
   ```

7. RUN SERVER
   ```bash
   uvicorn app:app --host 0.0.0.0 --port 8000
   ``` 